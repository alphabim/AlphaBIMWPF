<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:markup="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">


    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.TreeView.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.PopupBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf.ALB;component/Themes/MaterialDesignTheme.DataGrid.ComboBox.xaml" />

        <ResourceDictionary Source="SolidColorBrushStyles.xaml"/>
        <ResourceDictionary Source="RadiobuttonStyle.xaml" />
        <ResourceDictionary	Source="CheckBoxStyle.xaml" />
        <ResourceDictionary Source="ButtonStyle.xaml" />

    </ResourceDictionary.MergedDictionaries>



    <Style TargetType="{markup:Type ComboBox}" 
           BasedOn="{StaticResource MaterialDesignComboBox}"
                   >
        <Setter Property="Margin" Value="4,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />

        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.9"/>
        <Setter Property="materialDesign:HintAssist.HintOpacity" Value="0.8"/>
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
        <Setter Property="materialDesign:HintAssist.Foreground" Value="#c63f17"/>
        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="2" />
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource MauChinh}"/>

    </Style>


    <Style TargetType="{markup:Type TextBox}" 
           BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
                   >
        <Setter Property="materialDesign:HintAssist.Foreground" Value="#c63f17"/>
        <Setter Property="materialDesign:HintAssist.HintOpacity" Value="0.8"/>
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.9"/>
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource MauChinh}"/>

        <Setter Property="Margin" Value="4,2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>


    <Style TargetType="{markup:Type TextBlock}" 
           BasedOn="{StaticResource MaterialDesignTextBlock}"
                   >
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="4,2" />

    </Style>

    <Style TargetType="DockPanel">
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style TargetType="{markup:Type controls:NumericUpDown}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Minimum" Value="0"/>

    </Style>

    <Style TargetType="{markup:Type CheckBox}" 
                   BasedOn="{StaticResource CheckBoxStyle}">
    </Style>

    <Style TargetType="{markup:Type RadioButton}" 
                   BasedOn="{StaticResource RadioButtonStyle}">
    </Style>

    <!--<Style markup:Key="ButtonStyle" 
           TargetType="{markup:Type Button}" 
           BasedOn="{StaticResource MaterialDesignRaisedAccentButton}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Background" 
                Value="{StaticResource WindowButtonColor}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{markup:Type Button}">
                    -->
    <!--<Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}" 
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center" 
                                               Margin="0,0,0,0" />
                        </Grid>
                    </Border>-->
    <!--

                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Background" 
                                    Value="{StaticResource WindowButtonColor}" />
                            <Setter Property="Foreground" 
                                    Value="{StaticResource WindowForeHighlightColor}"  />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource WindowButtonPressedColor}"/>
                            <Setter Property="Foreground" 
                                    Value="{StaticResource WindowForeColor}"/>
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->



    <!--<Style TargetType="{markup:Type TreeViewItem}" 
           BasedOn="{StaticResource MaterialDesignTreeViewItem}">
        <Setter Property="IsExpanded" Value="True"/>
    </Style>

    <Style TargetType="{markup:Type TreeView}" 
           BasedOn="{StaticResource MaterialDesignTreeView}">
    </Style>-->

    <!--<Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource MauChinh}"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsEnabled" Value="False" />

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        TextWrapping="Wrap"
                        Text="{Binding}"
                        TextAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="DataGrid" BasedOn="{StaticResource DataGridStyle}">
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="ColumnWidth" Value="*"/>

      
    </Style>-->

    <!--<Style TargetType="{markup:Type ProgressBar}" 
           BasedOn="{StaticResource ProgressBarStyle}">
    </Style>-->

    <!--<Style TargetType="{markup:Type CheckBox}" 
                   BasedOn="{StaticResource MaterialDesignUserForegroundCheckBox}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BorderBrush" Value="{DynamicResource MauChinh}"/>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" 
                        Value="{DynamicResource MauChinh}"/>
                <Setter Property="FontWeight" 
                        Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="{markup:Type RadioButton}" 
                   BasedOn="{StaticResource MaterialDesignUserForegroundRadioButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Height" Value="25" />

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" 
                        Value="{DynamicResource MauChinh}"/>
                <Setter Property="FontWeight" 
                            Value="Bold" />
            </Trigger>
        </Style.Triggers>

    </Style>-->

    <!--<Style TargetType="{markup:Type PasswordBox}" 
                   BasedOn="{StaticResource MaterialDesignFloatingHintPasswordBox}">
        -->

    <!--<Setter Property="materialDesign:HintAssist.Foreground" Value="#c63f17"/>
        <Setter Property="materialDesign:HintAssist.HintOpacity" Value="0.8"/>
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.9"/>
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>-->
    <!--
        <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource MauChinh}"/>

        -->
    <!--<Setter Property="Margin" Value="4,2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />-->
    <!--
    </Style>-->

</ResourceDictionary>
    
    